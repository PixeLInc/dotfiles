set nocompatible
" handled via lazy.nvim now - lua, i know..
" silent! source $HOME/.vim/etc/plugs.vim

syntax on

filetype on
filetype indent on
filetype plugin on

set number
set relativenumber

set autoindent
set smartindent
set smarttab
set expandtab

set shiftwidth=2
set softtabstop=2
set tabstop=2

set virtualedit=onemore

set history=1000

set wildignore+=*/tmp/*,*.so,*.gz,*.swp,*.bak,*.pyc,*.class

set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<

set ignorecase
set smartcase

set autoread

set hlsearch

set cursorline
set nowrap

set t_vb=

" idunno what's changing this but im asserting this right here
" because i swear to god if it is 2 high again im going to lose it.
set cmdheight=1

set undodir=$HOME/.vim/undo/
set undofile
set undolevels=1000
set undoreload=10000

set directory=$HOME/.vim/swap

set backup
set writebackup
set backupdir-=.
set backupdir=$HOME/.vim/backup/

set viminfo+=n$HOME/.vim/.viminfo
 " end one
set spellfile=$HOME/.vim-spell-en.utf-8.add

set wildmode=longest,list:longest

set tags+=./.git/tags

augroup file_specific_settings
  autocmd!
  autocmd FileType markdown setlocal spell
  autocmd FileType gitcommit setlocal spell
augroup END

autocmd FileType * setlocal formatoptions-=cro
set formatoptions-=cro

set timeoutlen=300

" fuck you. this breaks everything.
" set ttimeoutlen=0
set pastetoggle=<F7>

nnoremap <space> :
nnoremap <silent> \ ,

nnoremap Y y$

" readline abilities in command mode
cnoremap <C-a> <Home>
cnoremap <C-e> <End>
cnoremap <C-f> <Right>
cnoremap <C-b> <Left>
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>
cnoremap <C-d> <Del>

noremap <silent> j gj
noremap <silent> k gk

" Move visual selection
vnoremap <silent> J :m '>+1<CR>gv=gv
vnoremap <silent> K :m '>-2<CR>gv=gv

" change the current working directory to the current file's location
nnoremap <silent> <leader>cd :cd %:p:h<CR>:pwd<CR>

" set up extra whitespace detection and stripping
nnoremap <silent> <leader>sw :StripWhitespace<CR>

" grep the word under the cursor.
nnoremap <silent> <leader>* :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" fast mapping to the last buffer command
nnoremap <silent> <leader>. <C-^>

" Incremental search settings
"let g:incsearch#auto_nohlsearch = 1
"let g:incsearch#consistent_n_direction = 1
"let g:incsearch#magic = '\v'
"
"" Incremental search mappings
"map /  <Plug>(incsearch-forward)
"map ?  <Plug>(incsearch-backward)
"map g/ <Plug>(incsearch-stay)
"map n  <Plug>(incsearch-nohl-n)zz
"map N  <Plug>(incsearch-nohl-N)zz
"map *  <Plug>(incsearch-nohl-*)
"map #  <Plug>(incsearch-nohl-#)
"map g* <Plug>(incsearch-nohl-g*)
"map g# <Plug>(incsearch-nohl-g#)

" CtrlP shortcuts and settings
nnoremap <silent> <leader>p :Files<CR>
nnoremap <silent> <leader>P :FZF<CR>
nnoremap <silent> <leader>c :Commits<CR>
nnoremap <silent> <leader>b :Buffers<CR>

" settings
nnoremap <leader>a :Rg<space>
let g:ag_highlight=1

" clear highlighting and redraw the screen
nnoremap <silent> <leader>l :redraw!<CR>:nohl<CR><ESC>

" quickly edit/reload the vimrc file or plugs file
nnoremap <silent> <leader>ev  :e $MYVIMRC<CR>
nnoremap <silent> <leader>ep  :e ~/.vim/etc/plugs.vim<CR>
nnoremap <silent> <leader>esv :vsplit<CR><C-w><C-w>:e $MYVIMRC<CR>
nnoremap <silent> <leader>esp :vsplit<CR><C-w><C-w>:e ~/.vim/etc/plugs.vim<CR>
nnoremap <silent> <leader>sv  :so $MYVIMRC<CR>:nohl<CR>

" fugitive shortcuts
nnoremap <silent> <leader>gl :Glog<CR>
nnoremap <silent> <leader>gd :Gdiff<CR>
nnoremap <silent> <leader>gb :Gblame<CR>
nnoremap <silent> <leader>gs :Gstatus<CR>
nnoremap <silent> <leader>gc :Gcommit -v<CR>
nnoremap <silent> <leader>gr :Gread<CR>

" quickly write
nnoremap <silent> <leader>w :write<CR>
nnoremap <silent> <leader>W :SudoWrite<CR>

" shortcuts for moving around split windows
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" shortcuts for opening new split windows
nnoremap <silent> <leader>h :split<CR><C-w><C-w>
nnoremap <silent> <leader>v :vsplit<CR><C-w><C-w>
nnoremap <silent> <leader>q :q<CR>
nnoremap <silent> <leader>Q :q!<CR>

" F8 to toggle line numbers and git-gutter
nnoremap <silent> <F8> :set nonumber!<CR>norelativenumber!<CR>:GitGutterToggle<CR>

" F9 to Toggle list (display unprintable characters)
nnoremap <silent> <F9> :set list!<CR>

" Toggle highlighting of current line and column.
nnoremap <silent> <F10> :set cursorline!<CR>

" Open explore if no args to vim
augroup VimStartup
  autocmd!
  autocmd VimEnter * if argc() == 0 | Explore! | endif
augroup END

" Open explore in new split instead of current buffer
nnoremap _ :Vexplore<CR>

" GitGutter Settings
let g:gitgutter_map_keys = 0

" if tmux or screen is being used, default to 256 colors
if &term == "screen"
  set t_Co=256
end

if &term == "xterm-256color"
  set t_Co=256
endif

" personal configs

" File stuff
au FileType c setl sw=4 sts=4 et
au FileType cpp setl sw=4 sts=4 et
au FileType d setl sw=4 sts=4 et
au FileType sourcepawn setl sw=2 sts=2 noexpandtab
au FileType sourcepawn setlocal makeprg=/mnt/games/Servers/csgo_surf/csgo/addons/sourcemod/scripting/spcomp64
let delimitMate_expand_cr=1

let g:go_def_mode='gopls'
let g:go_info_mode='gopls'

set relativenumber
nnoremap <silent> <F8> :set nonumber!<CR>:set relativenumber!<CR>:GitGutterToggle<CR>


" Crystal Formatter
let g:crystal_auto_format = 1

" idk, but the error won't stop :notlikeblob:
let g:snipMate = { 'snippet_version' : 1 }

" If you have vim >=8.0 or Neovim >= 0.1.5
if (has("termguicolors"))
 set termguicolors
endif

" For Neovim 0.1.3 and 0.1.4
let $NVIM_TUI_ENABLE_TRUE_COLOR=1

set background=dark
colorscheme zengarden

" Move fzf window to middle of screen + bigger
let g:fzf_preview_window = 'right:50%'
let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.6  }  }

" goyo (focus mode)
" goyo doesn't come with a toggle command, so i hack that in here as well
nnoremap <silent> <F4> :call GoyoToggle()<cr>

let g:goyo_open = 0

function! GoyoToggle()
  if g:goyo_open
    Goyo!
    let g:goyo_open = 0
  else
    Goyo 120x100%
    set number relativenumber
    let g:goyo_open = 1
  endif
endfunction
